#r "nuget: FsUnit"
open FsUnit

(*
let N,K,Aa,Ba,Ca,Da = 3,50L,[|3L;9L;17L|],[|4L;7L;9L|],[|10L;20L;30L|],[|1L;2L;3L|]
let N,K,Aa,Ba,Ca,Da = 37,3350L,[|6477L;740L;2831L;6305L;1257L;2590L;3116L;9924L;7896L;7741L;8805L;7867L;9976L;3847L;5856L;2117L;6066L;9635L;6035L;335L;322L;4208L;8567L;4465L;4529L;5564L;5108L;2261L;9019L;4153L;18L;1807L;2743L;6322L;1579L;4313L;4998L|],[|4490L;7658L;1101L;4175L;4617L;3774L;7097L;297L;2027L;21L;3181L;9323L;5451L;4966L;8560L;9998L;2587L;4113L;3847L;4472L;8123L;2210L;3202L;8289L;1561L;9729L;9576L;9235L;9299L;4976L;4436L;9873L;5778L;7676L;1741L;3726L;4709L|],[|7081L;5896L;9311L;813L;4385L;8132L;8912L;5578L;7479L;4815L;8833L;648L;9482L;8683L;4709L;9817L;3131L;9187L;3121L;2088L;9414L;4006L;8078L;3090L;2289L;2648L;5017L;6829L;6213L;9285L;9968L;427L;2324L;3377L;5864L;6314L;1633L|],[|6385L;9307L;3978L;8097L;1616L;3182L;1723L;7963L;7278L;7276L;750L;8952L;1003L;6668L;9657L;5791L;2363L;2897L;3673L;2260L;9647L;4896L;1910L;949L;8680L;7584L;3767L;474L;8707L;737L;3701L;5307L;9219L;1816L;4820L;3202L;6572L|]
let N,K,Aa,Ba,Ca,Da = 1,3632L,[|3517L|],[|7943L|],[|3395L|],[|7250L|]
let N,K,Aa,Ba,Ca,Da = 29,30L,[|666L;8716L;2556L;7036L;9365L;4872L;5462L;9444L;1489L;7055L;3698L;3142L;3327L;5803L;5706L;6492L;6713L;4283L;1020L;5637L;3007L;4577L;8920L;1206L;7195L;2953L;2243L;4780L;4027L|],[|9404L;5297L;3818L;6402L;5730L;8865L;9018L;8424L;1528L;5662L;723L;7758L;7243L;356L;3878L;1957L;154L;4077L;6111L;7679L;6774L;7209L;6521L;8346L;9546L;4638L;5027L;6717L;9779L|],[|5083L;5540L;128L;8710L;2503L;1835L;9779L;7088L;1953L;786L;1813L;4433L;3207L;1167L;9731L;2645L;5146L;4026L;4741L;3506L;8275L;4527L;7371L;6777L;3782L;7388L;647L;7266L;5109L|],[|7878L;7916L;6790L;3518L;7217L;9540L;7263L;5961L;9987L;9859L;192L;4590L;1100L;7348L;5723L;1822L;2263L;5565L;652L;3325L;9456L;1932L;7607L;5861L;5019L;5358L;3442L;9949L;2692L|]
let N,K,Aa,Ba,Ca,Da = 1,3L,[|1L|],[|1L|],[|1L|],[|2L|]
let N,K,Aa,Ba,Ca,Da = 1,3L,[|1L|],[|2L|],[|1L|],[|1L|]

*)
let solveTLE N K (Aa:int64[]) (Ba:int64[]) Ca Da =
  let Xa = [| for a in Aa do for b in Ba do let s=a+b in if s<K then yield s |] |> Array.sort
  let L1 = Xa.Length-1
  let Ya = set [ for c in Ca do for d in Da do let s=c+d in if s<K then yield s ]
  let rec frec i =
    printfn "%A" (i, K-Xa.[i])
    if i=L1 then "No"
    elif Ya |> Set.exists (fun y -> y+Xa.[i]=K) then "Yes"
    else frec (i+1)
  frec 0

let solve N K (Aa:int64[]) (Ba:int64[]) Ca Da =
  let Xa = [| for a in Aa do for b in Ba do let s=a+b in if s<K then yield s |] |> Array.sort
  let L1 = Xa.Length-1
  let Ya = [| for c in Ca do for d in Da do let s=c+d in if s<K then yield s |] |> Array.sort
  let L2 = Ya.Length-1
  let rec bsearch x l r =
    if r<=l+1 then if Ya.[r]+x=K || Ya.[l]+x=K then true else false
    else let m = (l+r)/2 in if Ya.[m]+x<K then bsearch x (m+1) r else bsearch x l m
  let rec frec i =
    if i=L1 then "No"
    elif bsearch Xa.[i] 0 L2 then "Yes"
    else frec (i+1)
  if L1=(-1) || L2=(-1) then "No" else frec 0

let N,K = stdin.ReadLine().Split() |> fun x -> int x.[0], int64 x.[1]
let Aa = stdin.ReadLine().Split() |> Array.map int64
let Ba = stdin.ReadLine().Split() |> Array.map int64
let Ca = stdin.ReadLine().Split() |> Array.map int64
let Da = stdin.ReadLine().Split() |> Array.map int64
solve N K Aa Ba Ca Da |> stdout.WriteLine

solve 3 50L [|3L;9L;17L|] [|4L;7L;9L|] [|10L;20L;30L|] [|1L;2L;3L|] |> should equal "Yes"
solve 37 3350L [|6477L;740L;2831L;6305L;1257L;2590L;3116L;9924L;7896L;7741L;8805L;7867L;9976L;3847L;5856L;2117L;6066L;9635L;6035L;335L;322L;4208L;8567L;4465L;4529L;5564L;5108L;2261L;9019L;4153L;18L;1807L;2743L;6322L;1579L;4313L;4998L|] [|4490L;7658L;1101L;4175L;4617L;3774L;7097L;297L;2027L;21L;3181L;9323L;5451L;4966L;8560L;9998L;2587L;4113L;3847L;4472L;8123L;2210L;3202L;8289L;1561L;9729L;9576L;9235L;9299L;4976L;4436L;9873L;5778L;7676L;1741L;3726L;4709L|] [|7081L;5896L;9311L;813L;4385L;8132L;8912L;5578L;7479L;4815L;8833L;648L;9482L;8683L;4709L;9817L;3131L;9187L;3121L;2088L;9414L;4006L;8078L;3090L;2289L;2648L;5017L;6829L;6213L;9285L;9968L;427L;2324L;3377L;5864L;6314L;1633L|] [|6385L;9307L;3978L;8097L;1616L;3182L;1723L;7963L;7278L;7276L;750L;8952L;1003L;6668L;9657L;5791L;2363L;2897L;3673L;2260L;9647L;4896L;1910L;949L;8680L;7584L;3767L;474L;8707L;737L;3701L;5307L;9219L;1816L;4820L;3202L;6572L|] |> should equal "Yes"
solve 1 3632L [|3517L|] [|7943L|] [|3395L|] [|7250L|] |> should equal "No"
solve 29 30L [|666L;8716L;2556L;7036L;9365L;4872L;5462L;9444L;1489L;7055L;3698L;3142L;3327L;5803L;5706L;6492L;6713L;4283L;1020L;5637L;3007L;4577L;8920L;1206L;7195L;2953L;2243L;4780L;4027L|] [|9404L;5297L;3818L;6402L;5730L;8865L;9018L;8424L;1528L;5662L;723L;7758L;7243L;356L;3878L;1957L;154L;4077L;6111L;7679L;6774L;7209L;6521L;8346L;9546L;4638L;5027L;6717L;9779L|] [|5083L;5540L;128L;8710L;2503L;1835L;9779L;7088L;1953L;786L;1813L;4433L;3207L;1167L;9731L;2645L;5146L;4026L;4741L;3506L;8275L;4527L;7371L;6777L;3782L;7388L;647L;7266L;5109L|] [|7878L;7916L;6790L;3518L;7217L;9540L;7263L;5961L;9987L;9859L;192L;4590L;1100L;7348L;5723L;1822L;2263L;5565L;652L;3325L;9456L;1932L;7607L;5861L;5019L;5358L;3442L;9949L;2692L|] |> should equal "No"
solve 1 3L [|1L|] [|1L|] [|1L|] [|2L|] |> should equal "No"
solve 1 3L [|1L|] [|2L|] [|1L|] [|1L|] |> should equal "No"

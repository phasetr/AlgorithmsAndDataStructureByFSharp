#r "nuget: FsUnit"
open FsUnit

let N,Aa = 3,[|[|0;1;1|];[|1;0;1|];[|1;1;1|]|]
"TODO: 高速化"
let solve N (Aa:int[][]) =
    let bit n k = (n >>> k) &&& 1
    let n = 1<<<N
    Array.zeroCreate n
    |> (fun dp -> Array.set dp 0 1; dp)
    |> fun dp ->
        (dp, [|0..n-1|])
        ||> Array.fold (fun dp S ->
            let i = System.Numerics.BitOperations.PopCount(uint32 S)
            (dp, [|0..(N-1)|])
            ||> Array.fold (fun dp j ->
                if (bit S j = 1) && Aa.[j].[i-1]=1
                then Array.set dp S ((dp.[S] + dp.[S^^^(1<<<j)])%1_000_000_007); dp
                else dp))
    |> fun dp -> dp.[n-1]
let N = stdin.ReadLine() |> int
let Aa = [| for i in 1..N do (stdin.ReadLine().Split() |> Array.map int) |]
solve N Aa |> stdout.WriteLine

solve 3 [|[|0;1;1|];[|1;0;1|];[|1;1;1|]|] |> should equal 3
solve 4 [|[|0;1;0;0|];[|0;0;0;1|];[|1;0;0;0|];[|0;0;1;0|]|] |> should equal 1
solve 1 [|[|0|]|] |> should equal 0
solve 21 [|[|0;0;0;0;0;0;0;1;1;0;1;1;1;1;0;0;0;1;0;0;1|];[|1;1;1;0;0;1;0;0;0;1;0;0;0;0;1;1;1;0;1;1;0|];[|0;0;1;1;1;1;0;1;1;0;0;1;0;0;1;1;0;0;0;1;1|];[|0;1;1;0;1;1;0;1;0;1;0;0;1;0;0;0;0;0;1;1;0|];[|1;1;0;0;1;0;1;0;0;1;1;1;1;0;0;0;0;0;0;0;0|];[|0;1;1;0;1;1;1;0;1;1;1;0;0;0;1;1;1;1;0;0;1|];[|0;1;0;0;0;1;0;1;0;0;0;1;1;1;0;0;1;1;0;1;0|];[|0;0;0;0;1;1;0;0;1;1;0;0;0;0;0;1;1;1;1;1;1|];[|0;0;1;0;0;1;0;0;1;0;1;1;0;0;1;0;1;0;1;1;1|];[|0;0;0;0;1;1;0;0;1;1;1;0;0;0;0;1;1;0;0;0;1|];[|0;1;1;0;1;1;0;0;1;1;0;0;0;1;1;1;1;0;1;1;0|];[|0;0;1;0;0;1;1;1;1;0;1;1;0;1;1;1;0;0;0;0;1|];[|0;1;1;0;0;1;1;1;1;0;0;0;1;0;1;1;0;1;0;1;1|];[|1;1;1;1;1;0;0;0;0;1;0;0;1;1;0;1;1;1;0;0;1|];[|0;0;0;1;1;0;1;1;1;1;0;0;0;0;0;0;1;1;1;1;1|];[|1;0;1;1;0;1;0;1;0;0;1;0;0;1;1;0;1;0;1;1;0|];[|0;0;1;1;0;0;1;1;0;0;1;1;0;0;1;1;1;1;0;0;1|];[|0;0;0;1;0;0;1;1;0;1;0;1;0;1;1;0;0;1;1;0;1|];[|0;0;0;0;1;1;1;0;1;0;1;1;1;0;1;1;0;0;1;1;0|];[|1;1;0;1;1;0;0;1;1;0;1;1;0;1;1;1;1;1;0;1;0|];[|1;0;0;1;1;0;1;1;1;1;1;0;1;0;1;1;0;0;0;0;0|]|] |> should equal 102515160

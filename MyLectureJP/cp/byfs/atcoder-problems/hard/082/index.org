* 082 C - Different Strokes
- created: 2022-12-14 wed
- ご意見・ご要望は[issue・プルリク用のGitHub](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/MyLectureJP/cp)まで
- [競技プログラミングのためのF#入門](../../../fsharp-for-cp/index.md)
- [GitHub上の対応ディレクトリ](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/AtCoder/Nikkei2019-Qual)
- [公式ページ](https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_c)
** 解説
公式解説通りに素直に実装します.

今回入出力は次のように処理する前提で解説します.

```fsharp
let N = stdin.ReadLine() |> int
let Xa = Array.init N (fun _ -> stdin.ReadLine().Split() |> Array.map int64 |> fun x -> x.[0],x.[1])
solve Xa |> stdout.WriteLine
```

降順ソートは`Array.sortDescending`と`Array.sortByDescending`があり,
今回は後者を使えばよいでしょう.

次は和を取る部分です.
配列はF#流の`0`はじまりとします.
公式解説では別途`b_i`の和を取っておくような形になっていました.
しかし配列の添字が偶数なら`a_i`を,
奇数なら`-b_i`を足すようにすれば`b_i`の和を別途用意する必要はありません.

問題は配列の添字をどう用意するかです.
`Array.indexed`で元の配列`Xa`を添字づけてから処理する方法もあれば,
添字の配列で`Array.fold`や`Array.sumBy`を回す方法もあります.
ここでは次のように`Array.fold`で添字を積む方法を取ります.

```fsharp
let solve Xa =
  Xa
  |> Array.sortByDescending (fun (a,b) -> a+b)
  |> Array.fold (fun (acc,i) (a,b) -> let c = if i%2=0 then a else -b in (acc+c, i+1)) (0L,0)
  |> fst
```

`Array.fold`で持ち回る変数として和の`acc`だけではなく添字の`i`も積みます.
添字にあたる`i`を削るため最後に`fst`で和だけを取っています.

`Array.fold`に食わせるラムダで`let c = hoge in`を使っています.
`let in`をうまく使うと一行でも見やすく書けて便利です.
もちろん二行に分けて書いても構いません.

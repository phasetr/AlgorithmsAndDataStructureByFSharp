* 100 C - Vacant Seat
- created: 2022-12-25 sun
- ご意見・ご要望は[issue・プルリク用のGitHub](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/MyLectureJP/cp)まで
- [競技プログラミングのためのF#入門](../../../fsharp-for-cp/index.md)
- [GitHub上の対応ディレクトリ](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/AtCoder/APC001)
- [公式ページ](https://atcoder.jp/contests/apc001/tasks/apc001_c)
- 要点: アルゴリズムの検討, `for break`の処理
** 解説
公式解説通りに素直に実装します.
F#では`for`の`break`がありません.
それは再帰関数で処理できます.
AOJのHaskellやOCamlのコードでも時々観測できます.

結論として次のように書けます.

```fsharp
let rec frec l r s0 =
  let m = (l+r)/2
  stdout.WriteLine m
  let s = stdin.ReadLine()
  if s="Vacant" then ()
  else if (m%2=0 && s0=s) || (m%2=1 && s0<>s) then frec (m+1) r s0 else frec l m s0

let N = stdin.ReadLine() |> int
stdout.WriteLine 0
let s0 = stdin.ReadLine()
if s0="Vacant" then ()
else frec 0 (N-1) s0
```

* 094 D - Blue and Red Balls
- created: 2022-12-23 fri
- ご意見・ご要望は[issue・プルリク用のGitHub](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/MyLectureJP/cp)まで
- [競技プログラミングのためのF#入門](../../../fsharp-for-cp/index.md)
- [GitHub上の対応ディレクトリ](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/AtCoder/ABC132)
- [公式ページ](https://atcoder.jp/contests/abc132/tasks/abc132_d)
- 要点: 組み合わせの処理
** 解説
数学的な組み合わせ処理と`mod`つき`nCr`の実装だけです.
後者は自分用のライブラリ・関数を用意しておくべきです.
*** 入出力
```fsharp
let N,K = stdin.ReadLine().Split() |> Array.map int64 |> (fun x -> x.[0],x.[1])
solve N K |> Array.iter stdout.WriteLine
```
*** 順列・組み合わせ系の関数
`mod`つきの計算の場合, いくつかの処理が簡略化できます.
逆数を取る走査もかけ算で表せるためそれを前提にした実装です.
単純に順列は`p`, 組み合わせは`c`にしています.

```fsharp
  let MOD = 1_000_000_007L
  let p n r = let rec frec acc n r = if r=0L then acc else frec ((n*acc)%MOD) (n-1L) (r-1L) in frec 1L n r
  let rec powm x n = if n=0L then 1L else if n%2L=0L then powm (x*x % MOD) (n/2L) else (x * (powm x (n-1L)) % MOD)
  let inv a = powm a (MOD-2L)
  let c n r = ((p n r) * (inv (p r r))) % MOD
```

これ以外の順列・組み合わせ系の関数実装サンプルが[Arithmetics.fsx](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/blob/master/Library/Arithmetics.fsx)にあります.
必要に応じて参照してください.
*** 各`i`に対する計算
```fsharp
  [|1L..K|] |> Array.map (fun i -> c (N-K+1L) i * c (K-1L) (i-1L) % MOD)
```
*** まとめ
```fsharp
let solve N K =
  let MOD = 1_000_000_007L
  let p n r = let rec frec acc n r = if r=0L then acc else frec ((n*acc)%MOD) (n-1L) (r-1L) in frec 1L n r
  let rec powm x n = if n=0L then 1L else if n%2L=0L then powm (x*x % MOD) (n/2L) else (x * (powm x (n-1L)) % MOD)
  let inv a = powm a (MOD-2L)
  let c n r = ((p n r) * (inv (p r r))) % MOD
  [|1L..K|] |> Array.map (fun i -> c (N-K+1L) i * c (K-1L) (i-1L) % MOD)
let N,K = stdin.ReadLine().Split() |> Array.map int64 |> (fun x -> x.[0],x.[1])
solve N K |> Array.iter stdout.WriteLine
```

* 081 C - Boxes and Candies
- created: 2022-12-14 wed
- ご意見・ご要望は[issue・プルリク用のGitHub](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/MyLectureJP/cp)まで
- [競技プログラミングのためのF#入門](../../../byfs/fsharp-for-cp/index.md)
- [GitHub上の対応ディレクトリ](https://github.com/phasetr/AlgorithmsAndDataStructureByFSharp/tree/master/AtCoder/ABC048)
- [公式ページ](https://atcoder.jp/contests/abc048/tasks/arc064_a)
** 解説
公式解説通りに素直に実装します.
競プロと言えどプログラミングである以上,
簡潔さと明確さを兼ね備えてほしいため,
条件分岐をどうすっきりまとめるかが焦点です.
特に今回はややこしい条件分岐は`max`でまとめられます.
私自身, 執筆時点でまだまだ不慣れな部分です.

さっと正解を書けたとしても,
他の人,
特にショートコードを書く人達のコードをいくつか眺めると勉強になります.

結論としては次のように書けばよいでしょう.

```fsharp
let solve N x Aa =
  ((0L,0L),Aa)
  ||> Array.fold (fun (acc,a0) a -> let c = max (a0+a-x) 0L in (acc+c, a-c))
  |> fst
```

総和がほしいタイプのループ処理だから`fold`ですっきり書けます.
